#!/bin/bash

name="$1"
filename=/tmp/"$1"

bspc_write_nodeid() {
    while true
    do
        flag=false
        for id in $(bspc query -d focused -N -n .floating.sticky.hidden)
        do
            bspc query --node $id -T | grep -q $name && { echo $id > $filename; flag=true; break; }
        done
        [[ "$flag" == "true" ]] && break
        sleep 0.1s
    done
}

hide_all_except_current(){
    for id in $(bspc query -d focused -N -n .floating.sticky.!hidden)
    do
        bspc query --node $id -T | grep -qv $name && bspc node $id --flag hidden=on
    done
}

toggle_hidden() {
    [ -e "$filename" ] || exit 1
    hide_all_except_current
    id=$(<$filename)
    bspc node $id --flag hidden -f
}

create_terminal(){
    bspc rule -a "$name" --one-shot state=floating rectangle=1700x1000+0+0 center=true sticky=on hidden=on
    alacritty --class="$name","$name" -e $1 &
}

create_obsidian() {
    bspc rule -a "$name" --one-shot state=floating rectangle=1700x1000+0+0 center=true sticky=on hidden=on
    ~/.local/bin/Obsidian-1.7.4.AppImage --no-sandbox --class="$name","$name" &
}

create_emacs() {
    bspc rule -a Emacs --one-shot state=floating rectangle=1700x1000+0+0 center=true sticky=on hidden=on
    emacsclient -c --eval '(progn (switch-to-buffer (get-buffer-create "scratchpad.org")) (org-mode))' &
}

if ! ps -ef | grep -q "[c]lass=$name"
then
    case "$name" in
        "htop")
            create_terminal htop
            ;;
        "obsidian")
            create_obsidian
            ;;
        "terminal")
            create_terminal $SHELL
            ;;
        *)
            exit 1
    esac
    dunstify "Scratch: $name"
    bspc_write_nodeid
    toggle_hidden
else
    toggle_hidden
fi

